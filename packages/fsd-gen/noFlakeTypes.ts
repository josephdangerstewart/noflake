// DO NOT EDIT: generated by fsdgenjs
/* eslint-disable */

import { IServiceResult } from 'facility-core';

export interface INoFlake {
	createProject(request: ICreateProjectRequest, context?: unknown): Promise<IServiceResult<ICreateProjectResponse>>;

	submitTestSuiteResult(request: ISubmitTestSuiteResultRequest, context?: unknown): Promise<IServiceResult<ISubmitTestSuiteResultResponse>>;
}

/** Request for CreateProject. */
export interface ICreateProjectRequest {
	project?: IProject;
}

/** Response for CreateProject. */
export interface ICreateProjectResponse {
	project?: IProject;
}

/** Request for SubmitTestSuiteResult. */
export interface ISubmitTestSuiteResultRequest {
	suite?: ITestSuite;

	results?: ITestResult[];
}

/** Response for SubmitTestSuiteResult. */
export interface ISubmitTestSuiteResultResponse {
}

export interface IProject {
	projectId?: string;

	name?: string;
}

export interface ITestSuite {
	/** Required. The sha of the git commit for which the test suite was run. */
	commitSha?: string;

	/** Required. A unique, client defined, identifier of this test suite since one project may have multiple test suites */
	suiteId?: string;

	/** When this test suite was run. Defaults to current time. */
	runDate?: string;

	/** Required. The project this run is associated with */
	projectId?: string;
}

export interface ITestResult {
	/** Required. An opaque token identifying this test. */
	testId?: string;

	/** Required. The ending result of the test. */
	status?: TestResultStatus;

	/** Null if the test passed. Defaults to empty array. */
	errors?: string[];

	/** A value of 1 indicates certainty that this test flaked (e.g. the test failed, was retried, and passed). A value of 0 indicates either the test did not flake (e.g. the test passed on the first try) or it is unknown if the test flaked or not. Values in between indicate the test may have flaked. */
	flakeConfidence?: number;
}

export enum TestResultStatus {
	pass = 'pass',

	fail = 'fail',
}

